package com.example.mmowgli_2_0;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.NativeButton;

public class TopBar extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private Link link_play;
	@AutoGenerated
	private Label label_details;
	@AutoGenerated
	private Label label_round;
	@AutoGenerated
	private Label label_mission;
	@AutoGenerated
	private NativeButton nativeButton_home;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public TopBar() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setColumns(4);
		mainLayout.setRows(3);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// nativeButton_home
		nativeButton_home = new NativeButton();
		nativeButton_home.setCaption("MMOWGLI");
		nativeButton_home.setImmediate(true);
		nativeButton_home.setWidth("-1px");
		nativeButton_home.setHeight("-1px");
		mainLayout.addComponent(nativeButton_home, 0, 0);
		mainLayout.setComponentAlignment(nativeButton_home, new Alignment(9));
		
		// label_mission
		label_mission = new Label();
		label_mission.setImmediate(false);
		label_mission.setWidth("-1px");
		label_mission.setHeight("-1px");
		label_mission.setValue("MISSION: Blackswan");
		mainLayout.addComponent(label_mission, 1, 0);
		mainLayout.setComponentAlignment(label_mission, new Alignment(24));
		
		// label_round
		label_round = new Label();
		label_round.setImmediate(false);
		label_round.setWidth("-1px");
		label_round.setHeight("-1px");
		label_round.setValue("ROUND: 1");
		mainLayout.addComponent(label_round, 2, 0);
		mainLayout.setComponentAlignment(label_round, new Alignment(24));
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2, 3, 0);
		mainLayout.setComponentAlignment(horizontalLayout_2, new Alignment(24));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		horizontalLayout_2.setSpacing(true);
		
		// label_details
		label_details = new Label();
		label_details.setImmediate(false);
		label_details.setWidth("-1px");
		label_details.setHeight("-1px");
		label_details.setValue("MISSION DETAILS:");
		horizontalLayout_2.addComponent(label_details);
		horizontalLayout_2.setComponentAlignment(label_details, new Alignment(
				48));
		
		// link_play
		link_play = new Link();
		link_play.setCaption("Click to Play");
		link_play.setImmediate(false);
		link_play.setWidth("-1px");
		link_play.setHeight("-1px");
		horizontalLayout_2.addComponent(link_play);
		horizontalLayout_2.setComponentAlignment(link_play, new Alignment(48));
		
		return horizontalLayout_2;
	}

}
