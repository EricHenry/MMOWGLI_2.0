package com.example.mmowgli_2_0;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.NativeButton;

public class TopBar extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_details;
	@AutoGenerated
	private Link link_play;
	@AutoGenerated
	private Label label_details;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_round;
	@AutoGenerated
	private Label label_round;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_mission;
	@AutoGenerated
	private Label label_mission;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_home;
	@AutoGenerated
	private NativeButton nativeButton_home;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public TopBar() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		nativeButton_home.setStyleName("borderless");
		nativeButton_home.setIcon(new ThemeResource("images/icons/topbar/mmowgli.png"));
		nativeButton_home.setCaption(null);
		
		//set the images for the top bar's labels
		//TODO create separate function to handle
		label_mission.setIcon(new ThemeResource("images/icons/topbar/MissionFull.png"));
		label_mission.setValue(null);
		//label_missionTitle.setIcon(new ThemeResource("images/icons/topbar/blackswan.png"));
		//label_missionTitle.setValue(null);
		
		label_round.setIcon(new ThemeResource("images/icons/topbar/Round1.png"));
		label_round.setValue(null);
		//label_roundTitle.setIcon(new ThemeResource("images/icons/topbar/1.png"));
		//label_roundTitle.setValue(null);
		
		label_details.setIcon(new ThemeResource("images/icons/topbar/details.png"));
		label_details.setValue(null);
		
		//set the style name for the labels
		//using the layouts so the entire background will be edited
		//TODO create function to handle
		horizontalLayout_home.setStyleName("topbar");
		horizontalLayout_mission.setStyleName("topbar");
		horizontalLayout_round.setStyleName("topbar");
		horizontalLayout_details.setStyleName("topbar");
		
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_home
		horizontalLayout_home = buildHorizontalLayout_home();
		mainLayout.addComponent(horizontalLayout_home);
		mainLayout.setExpandRatio(horizontalLayout_home, 0.42f);
		
		// horizontalLayout_mission
		horizontalLayout_mission = buildHorizontalLayout_mission();
		mainLayout.addComponent(horizontalLayout_mission);
		mainLayout.setExpandRatio(horizontalLayout_mission, 1.0f);
		mainLayout.setComponentAlignment(horizontalLayout_mission,
				new Alignment(48));
		
		// horizontalLayout_round
		horizontalLayout_round = buildHorizontalLayout_round();
		mainLayout.addComponent(horizontalLayout_round);
		mainLayout.setExpandRatio(horizontalLayout_round, 1.0f);
		mainLayout.setComponentAlignment(horizontalLayout_round, new Alignment(
				48));
		
		// horizontalLayout_details
		horizontalLayout_details = buildHorizontalLayout_details();
		mainLayout.addComponent(horizontalLayout_details);
		mainLayout.setExpandRatio(horizontalLayout_details, 1.0f);
		mainLayout.setComponentAlignment(horizontalLayout_details,
				new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_home() {
		// common part: create layout
		horizontalLayout_home = new HorizontalLayout();
		horizontalLayout_home.setImmediate(false);
		horizontalLayout_home.setWidth("160px");
		horizontalLayout_home.setHeight("100.0%");
		horizontalLayout_home.setMargin(false);
		
		// nativeButton_home
		nativeButton_home = new NativeButton();
		nativeButton_home.setCaption("NativeButton");
		nativeButton_home.setImmediate(true);
		nativeButton_home.setWidth("100.0%");
		nativeButton_home.setHeight("100.0%");
		horizontalLayout_home.addComponent(nativeButton_home);
		
		return horizontalLayout_home;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_mission() {
		// common part: create layout
		horizontalLayout_mission = new HorizontalLayout();
		horizontalLayout_mission.setImmediate(false);
		horizontalLayout_mission.setWidth("-1px");
		horizontalLayout_mission.setHeight("-1px");
		horizontalLayout_mission.setMargin(false);
		horizontalLayout_mission.setSpacing(true);
		
		// label_mission
		label_mission = new Label();
		label_mission.setImmediate(false);
		label_mission.setWidth("-1px");
		label_mission.setHeight("-1px");
		label_mission.setValue("Label");
		horizontalLayout_mission.addComponent(label_mission);
		horizontalLayout_mission.setComponentAlignment(label_mission,
				new Alignment(48));
		
		return horizontalLayout_mission;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_round() {
		// common part: create layout
		horizontalLayout_round = new HorizontalLayout();
		horizontalLayout_round.setImmediate(false);
		horizontalLayout_round.setWidth("-1px");
		horizontalLayout_round.setHeight("-1px");
		horizontalLayout_round.setMargin(false);
		horizontalLayout_round.setSpacing(true);
		
		// label_round
		label_round = new Label();
		label_round.setImmediate(false);
		label_round.setWidth("-1px");
		label_round.setHeight("-1px");
		label_round.setValue("Label");
		horizontalLayout_round.addComponent(label_round);
		horizontalLayout_round.setComponentAlignment(label_round,
				new Alignment(48));
		
		return horizontalLayout_round;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_details() {
		// common part: create layout
		horizontalLayout_details = new HorizontalLayout();
		horizontalLayout_details.setImmediate(false);
		horizontalLayout_details.setWidth("-1px");
		horizontalLayout_details.setHeight("-1px");
		horizontalLayout_details.setMargin(false);
		horizontalLayout_details.setSpacing(true);
		
		// label_details
		label_details = new Label();
		label_details.setImmediate(false);
		label_details.setWidth("-1px");
		label_details.setHeight("-1px");
		label_details.setValue("Label");
		horizontalLayout_details.addComponent(label_details);
		horizontalLayout_details.setComponentAlignment(label_details,
				new Alignment(48));
		
		// link_play
		link_play = new Link();
		link_play.setCaption("Click to Play");
		link_play.setImmediate(false);
		link_play.setWidth("-1px");
		link_play.setHeight("-1px");
		horizontalLayout_details.addComponent(link_play);
		horizontalLayout_details.setComponentAlignment(link_play,
				new Alignment(48));
		
		return horizontalLayout_details;
	}

}
