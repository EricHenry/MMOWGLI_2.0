package com.example.mmowgli_2_0;

import com.example.mmowgli_updates.PopularCards;
import com.example.mmowgli_updates.PopularTags;
import com.example.mmowgli_updates.RecentlyPlayed;
import com.example.mmowgli_updates.TrendingCards;
import com.example.mmowgli_updates.TrendingTags;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

public class HomePageUpdates extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Panel panel_1;

	@AutoGenerated
	private VerticalLayout verticalLayout_2;

	@AutoGenerated
	private GridLayout gridLayout_2;

	@AutoGenerated
	private Link link_video;

	@AutoGenerated
	private Link link_twitter;

	@AutoGenerated
	private Link link_trouble;

	@AutoGenerated
	private Link link_terms;

	@AutoGenerated
	private Link link_report;

	@AutoGenerated
	private Link link_glossary;

	@AutoGenerated
	private Link link_fixes;

	@AutoGenerated
	private Link link_faq;

	@AutoGenerated
	private Link link_credits;

	@AutoGenerated
	private Link link_about;

	@AutoGenerated
	private VerticalLayout verticalLayout_3;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_3;

	@AutoGenerated
	private PopularCards popularCards_2;

	@AutoGenerated
	private PopularTags popularTags_2;

	@AutoGenerated
	private PopularCards popularCards_1;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;

	@AutoGenerated
	private Label label_3;

	@AutoGenerated
	private Label label_2;

	@AutoGenerated
	private Label label_1;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;

	@AutoGenerated
	private RecentlyPlayed recentlyPlayed_1;

	@AutoGenerated
	private TrendingTags trendingTags_2;

	@AutoGenerated
	private TrendingCards trendingCards_1;

	@AutoGenerated
	private VerticalLayout verticalLayout_root;

	@AutoGenerated
	private HorizontalLayout test_layout;

	@AutoGenerated
	private NativeButton root_button2;

	@AutoGenerated
	private NativeButton root_button1;

	@AutoGenerated
	private NativeButton toggle_rootCards;

	private PopularTags popularTagList;
	private TrendingTags trendingTagList;
	
	private boolean showRootCards = true;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HomePageUpdates() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
//		mainLayout.setWidth("auto");
//		mainLayout.setHeight("auto");
//		
//		trendingTagList = new TrendingTags();
//		mainLayout.addComponent(trendingTagList, 1, 0);
//		mainLayout.setComponentAlignment(trendingTagList,
//				new Alignment(48));
//		
//		
//		popularTagList = new PopularTags();
//		mainLayout.addComponent(popularTagList, 1, 1);
//		mainLayout.setComponentAlignment(popularTagList,
//				new Alignment(48));
		
		trendingCards_1.setStyleName("updateBorders");
		trendingTags_2.setStyleName("updateBorders");
		popularCards_1.setStyleName("updateBorders");
		popularTags_2.setStyleName("updateBorders");
		label_1.setStyleName("updateBorders");
		label_2.setStyleName("updateBorders");
		
		
		//toogle root cards
		toggle_rootCards.setCaption(null);
		toggle_rootCards.setIcon(new ThemeResource("images/icons/updates/threeDots.png"));
		toggle_rootCards.setStyleName("rootToggle");
		
		toggle_rootCards.addClickListener(new NativeButton.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				showRootCards = !showRootCards;
				test_layout.setVisible(showRootCards);
				
				//if true the rootcards are now invisible -> remove the extra space on screen
				//else the root cards are now visible -> add space on screen
				if(showRootCards == false)
				{
					//rootButton_Ratio = 40.0f;
					mainLayout.setExpandRatio(verticalLayout_root, 0.05f);
					
					//handle the spacing of the different updates 
					//verticalLayout_3.setExpandRatio(horizontalLayout_1, 2.25f);
				}
				else 
				{
					//rootButton_Ratio = 5.0f;
					mainLayout.setExpandRatio(verticalLayout_root, 0.33f);
					
					//handle the spacing of the different updates 
					//verticalLayout_3.setExpandRatio(horizontalLayout_1, 3.0f);

				}
				
			}
		});
		
		
		//labels
		label_1.setValue(null);
		label_2.setValue(null);
		label_3.setValue(null);
		//label_4.setValue(null);
		//label_5.setValue(null);
		//label_6.setValue(null);
		//label_7.setValue(null);
		
		label_1.setIcon(new ThemeResource("images/icons/updates/horizLine.png"));
		label_2.setIcon(new ThemeResource("images/icons/updates/horizLine.png"));
		label_3.setIcon(new ThemeResource("images/icons/updates/horizLine.png"));
		
		//label_4.setIcon(new ThemeResource("images/icons/updates/vertLine.png"));
		//label_5.setIcon(new ThemeResource("images/icons/updates/vertLine.png"));
		//label_6.setIcon(new ThemeResource("images/icons/updates/vertLine.png"));
		//label_7.setIcon(new ThemeResource("images/icons/updates/vertLine.png"));
		
		//root cards formatting
		root_button1.setStyleName("root1");
		root_button2.setStyleName("root2");
		
		//verticalLayout_3.setStyleName("center");
		verticalLayout_root.setStyleName("white");
		panel_1.setStyleName("borderless");
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalLayout_root
		verticalLayout_root = buildVerticalLayout_root();
		mainLayout.addComponent(verticalLayout_root);
		mainLayout.setExpandRatio(verticalLayout_root, 0.33f);
		
		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);
		mainLayout.setExpandRatio(panel_1, 1.0f);
		mainLayout.setComponentAlignment(panel_1, new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_root() {
		// common part: create layout
		verticalLayout_root = new VerticalLayout();
		verticalLayout_root.setImmediate(false);
		verticalLayout_root.setWidth("100.0%");
		verticalLayout_root.setHeight("100.0%");
		verticalLayout_root.setMargin(false);
		
		// toggle_rootCards
		toggle_rootCards = new NativeButton();
		toggle_rootCards.setCaption("NativeButton");
		toggle_rootCards.setImmediate(true);
		toggle_rootCards.setWidth("100.0%");
		toggle_rootCards.setHeight("-1px");
		verticalLayout_root.addComponent(toggle_rootCards);
		verticalLayout_root.setComponentAlignment(toggle_rootCards,
				new Alignment(20));
		
		// test_layout
		test_layout = buildTest_layout();
		verticalLayout_root.addComponent(test_layout);
		verticalLayout_root.setExpandRatio(test_layout, 0.1f);
		verticalLayout_root.setComponentAlignment(test_layout,
				new Alignment(20));
		
		return verticalLayout_root;
	}

	@AutoGenerated
	private HorizontalLayout buildTest_layout() {
		// common part: create layout
		test_layout = new HorizontalLayout();
		test_layout.setImmediate(false);
		test_layout.setWidth("100.0%");
		test_layout.setHeight("100.0%");
		test_layout.setMargin(false);
		
		// root_button1
		root_button1 = new NativeButton();
		root_button1.setCaption("root1");
		root_button1.setImmediate(true);
		root_button1.setWidth("399px");
		root_button1.setHeight("134px");
		test_layout.addComponent(root_button1);
		test_layout.setExpandRatio(root_button1, 0.5f);
		test_layout.setComponentAlignment(root_button1, new Alignment(48));
		
		// root_button2
		root_button2 = new NativeButton();
		root_button2.setCaption("root2");
		root_button2.setImmediate(true);
		root_button2.setWidth("399px");
		root_button2.setHeight("134px");
		test_layout.addComponent(root_button2);
		test_layout.setExpandRatio(root_button2, 0.5f);
		test_layout.setComponentAlignment(root_button2, new Alignment(48));
		
		return test_layout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);
		
		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("1150px");
		verticalLayout_2.setHeight("1080px");
		verticalLayout_2.setMargin(false);
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		verticalLayout_2.addComponent(verticalLayout_3);
		verticalLayout_2.setExpandRatio(verticalLayout_3, 5.0f);
		verticalLayout_2.setComponentAlignment(verticalLayout_3, new Alignment(
				48));
		
		// gridLayout_2
		gridLayout_2 = buildGridLayout_2();
		verticalLayout_2.addComponent(gridLayout_2);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("100.0%");
		verticalLayout_3.setMargin(false);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		verticalLayout_3.addComponent(horizontalLayout_1);
		verticalLayout_3.setExpandRatio(horizontalLayout_1, 2.5f);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		verticalLayout_3.addComponent(horizontalLayout_2);
		verticalLayout_3.setExpandRatio(horizontalLayout_2, 0.1f);
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		verticalLayout_3.addComponent(horizontalLayout_3);
		verticalLayout_3.setExpandRatio(horizontalLayout_3, 4.0f);
		
		return verticalLayout_3;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("400px");
		horizontalLayout_1.setMargin(false);
		
		// trendingCards_1
		trendingCards_1 = new TrendingCards();
		trendingCards_1.setImmediate(false);
		trendingCards_1.setWidth("100.0%");
		trendingCards_1.setHeight("350px");
		horizontalLayout_1.addComponent(trendingCards_1);
		horizontalLayout_1.setComponentAlignment(trendingCards_1,
				new Alignment(48));
		
		// trendingTags_2
		trendingTags_2 = new TrendingTags();
		trendingTags_2.setImmediate(false);
		trendingTags_2.setWidth("100.0%");
		trendingTags_2.setHeight("350px");
		horizontalLayout_1.addComponent(trendingTags_2);
		horizontalLayout_1.setComponentAlignment(trendingTags_2, new Alignment(
				48));
		
		// recentlyPlayed_1
		recentlyPlayed_1 = new RecentlyPlayed();
		recentlyPlayed_1.setImmediate(false);
		recentlyPlayed_1.setWidth("100.0%");
		recentlyPlayed_1.setHeight("350px");
		horizontalLayout_1.addComponent(recentlyPlayed_1);
		horizontalLayout_1.setComponentAlignment(recentlyPlayed_1,
				new Alignment(48));
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("100.0%");
		horizontalLayout_2.setHeight("2px");
		horizontalLayout_2.setMargin(false);
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("2px");
		label_1.setValue("Label");
		horizontalLayout_2.addComponent(label_1);
		horizontalLayout_2.setComponentAlignment(label_1, new Alignment(48));
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Label");
		horizontalLayout_2.addComponent(label_2);
		horizontalLayout_2.setComponentAlignment(label_2, new Alignment(48));
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Label");
		horizontalLayout_2.addComponent(label_3);
		horizontalLayout_2.setComponentAlignment(label_3, new Alignment(48));
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("100.0%");
		horizontalLayout_3.setHeight("400px");
		horizontalLayout_3.setMargin(false);
		
		// popularCards_1
		popularCards_1 = new PopularCards();
		popularCards_1.setImmediate(false);
		popularCards_1.setWidth("100.0%");
		popularCards_1.setHeight("350px");
		horizontalLayout_3.addComponent(popularCards_1);
		horizontalLayout_3.setComponentAlignment(popularCards_1, new Alignment(
				48));
		
		// popularTags_2
		popularTags_2 = new PopularTags();
		popularTags_2.setImmediate(false);
		popularTags_2.setWidth("100.0%");
		popularTags_2.setHeight("350px");
		horizontalLayout_3.addComponent(popularTags_2);
		horizontalLayout_3.setComponentAlignment(popularTags_2, new Alignment(
				48));
		
		// popularCards_2
		popularCards_2 = new PopularCards();
		popularCards_2.setImmediate(false);
		popularCards_2.setWidth("100.0%");
		popularCards_2.setHeight("350px");
		horizontalLayout_3.addComponent(popularCards_2);
		horizontalLayout_3.setComponentAlignment(popularCards_2, new Alignment(
				48));
		
		return horizontalLayout_3;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_2() {
		// common part: create layout
		gridLayout_2 = new GridLayout();
		gridLayout_2.setImmediate(false);
		gridLayout_2.setWidth("100.0%");
		gridLayout_2.setHeight("-1px");
		gridLayout_2.setMargin(false);
		gridLayout_2.setSpacing(true);
		gridLayout_2.setColumns(10);
		
		// link_about
		link_about = new Link();
		link_about.setCaption("About");
		link_about.setImmediate(false);
		link_about.setWidth("-1px");
		link_about.setHeight("-1px");
		gridLayout_2.addComponent(link_about, 0, 0);
		gridLayout_2.setComponentAlignment(link_about, new Alignment(20));
		
		// link_credits
		link_credits = new Link();
		link_credits.setCaption("Credits and Contacts");
		link_credits.setImmediate(false);
		link_credits.setWidth("-1px");
		link_credits.setHeight("-1px");
		gridLayout_2.addComponent(link_credits, 1, 0);
		gridLayout_2.setComponentAlignment(link_credits, new Alignment(20));
		
		// link_faq
		link_faq = new Link();
		link_faq.setCaption("FAQs");
		link_faq.setImmediate(false);
		link_faq.setWidth("-1px");
		link_faq.setHeight("-1px");
		gridLayout_2.addComponent(link_faq, 2, 0);
		gridLayout_2.setComponentAlignment(link_faq, new Alignment(20));
		
		// link_fixes
		link_fixes = new Link();
		link_fixes.setCaption("Fixes");
		link_fixes.setImmediate(false);
		link_fixes.setWidth("-1px");
		link_fixes.setHeight("-1px");
		gridLayout_2.addComponent(link_fixes, 3, 0);
		gridLayout_2.setComponentAlignment(link_fixes, new Alignment(20));
		
		// link_glossary
		link_glossary = new Link();
		link_glossary.setCaption("Glossary");
		link_glossary.setImmediate(false);
		link_glossary.setWidth("-1px");
		link_glossary.setHeight("-1px");
		gridLayout_2.addComponent(link_glossary, 4, 0);
		gridLayout_2.setComponentAlignment(link_glossary, new Alignment(20));
		
		// link_report
		link_report = new Link();
		link_report.setCaption("Reports");
		link_report.setImmediate(false);
		link_report.setWidth("-1px");
		link_report.setHeight("-1px");
		gridLayout_2.addComponent(link_report, 5, 0);
		gridLayout_2.setComponentAlignment(link_report, new Alignment(20));
		
		// link_terms
		link_terms = new Link();
		link_terms.setCaption("Terms and Conditions");
		link_terms.setImmediate(false);
		link_terms.setWidth("-1px");
		link_terms.setHeight("-1px");
		gridLayout_2.addComponent(link_terms, 6, 0);
		gridLayout_2.setComponentAlignment(link_terms, new Alignment(20));
		
		// link_trouble
		link_trouble = new Link();
		link_trouble.setCaption("Trouble Report");
		link_trouble.setImmediate(false);
		link_trouble.setWidth("-1px");
		link_trouble.setHeight("-1px");
		gridLayout_2.addComponent(link_trouble, 7, 0);
		gridLayout_2.setComponentAlignment(link_trouble, new Alignment(20));
		
		// link_twitter
		link_twitter = new Link();
		link_twitter.setCaption("Twitter");
		link_twitter.setImmediate(false);
		link_twitter.setWidth("-1px");
		link_twitter.setHeight("-1px");
		gridLayout_2.addComponent(link_twitter, 8, 0);
		gridLayout_2.setComponentAlignment(link_twitter, new Alignment(20));
		
		// link_video
		link_video = new Link();
		link_video.setCaption("Videos");
		link_video.setImmediate(false);
		link_video.setWidth("-1px");
		link_video.setHeight("-1px");
		gridLayout_2.addComponent(link_video, 9, 0);
		gridLayout_2.setComponentAlignment(link_video, new Alignment(20));
		
		return gridLayout_2;
	}

}
