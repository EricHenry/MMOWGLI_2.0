/**
 * @Author: Eric H Correia
 *
 * This class creates 
 * 
 */

package com.example.mmowgli_updates;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.VerticalLayout;

public class BaseCardView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_userData;
	@AutoGenerated
	private Link link_date;
	@AutoGenerated
	private Link link_user;
	@AutoGenerated
	private Label label_by;
	@AutoGenerated
	private NativeButton nativeButton_text;
	private String cardId;
	private String cardType;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public BaseCardView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}
	
	/**
	 * 
	 * This constructor allows for the creation of basic card view with specific information
	 * 
	 * @param id			-> Id of the card
	 * @param playerId		-> Username or ID
	 * @param cardText		-> The text within the card
	 * @param cardType		-> The type of card 
	 * @param date			-> When the card was created
	 */
	public BaseCardView(String id, String playerId, String cardText, String cardType, String date) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		
		//Set Attribute values
		this.cardId = id;
		nativeButton_text.setCaption(cardType + ": " + cardText);
		//nativeButton_text.setId(id);
		link_user.setCaption(playerId + "  ");
		link_date.setCaption(" " + date);
		this.cardType = cardType;
		
		//styling
		nativeButton_text.setStyleName(this.cardType.toLowerCase());
		label_by.setValue(null);
	}

	public Link getLink_date() {
		return link_date;
	}

	public void setLink_date(Link link_date) {
		this.link_date = link_date;
	}

	public Link getLink_user() {
		return link_user;
	}

	public void setLink_user(Link link_user) {
		this.link_user = link_user;
	}

	public Label getLabel_by() {
		return label_by;
	}

	public void setLabel_by(Label label_by) {
		this.label_by = label_by;
	}

	public NativeButton getNativeButton_text() {
		return nativeButton_text;
	}

	public void setNativeButton_text(NativeButton nativeButton_text) {
		this.nativeButton_text = nativeButton_text;
	}

	public String getCardId() {
		return cardId;
	}

	public void setCardId(String cardId) {
		this.cardId = cardId;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("85.0%");
		setHeight("100.0%");
		
		// nativeButton_text
		nativeButton_text = new NativeButton();
		nativeButton_text.setCaption("NativeButton");
		nativeButton_text.setImmediate(true);
		nativeButton_text.setWidth("100.0%");
		nativeButton_text.setHeight("-1px");
		mainLayout.addComponent(nativeButton_text);
		
		// horizontalLayout_userData
		horizontalLayout_userData = buildHorizontalLayout_userData();
		mainLayout.addComponent(horizontalLayout_userData);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_userData() {
		// common part: create layout
		horizontalLayout_userData = new HorizontalLayout();
		horizontalLayout_userData.setImmediate(false);
		horizontalLayout_userData.setWidth("-1px");
		horizontalLayout_userData.setHeight("-1px");
		horizontalLayout_userData.setMargin(false);
		horizontalLayout_userData.setSpacing(true);
		
		// label_by
		label_by = new Label();
		label_by.setCaption("By:");
		label_by.setImmediate(false);
		label_by.setWidth("-1px");
		label_by.setHeight("-1px");
		label_by.setValue("Label");
		horizontalLayout_userData.addComponent(label_by);
		
		// link_user
		link_user = new Link();
		link_user.setCaption("Link");
		link_user.setImmediate(false);
		link_user.setWidth("-1px");
		link_user.setHeight("-1px");
		horizontalLayout_userData.addComponent(link_user);
		
		// link_date
		link_date = new Link();
		link_date.setCaption("Link");
		link_date.setImmediate(false);
		link_date.setWidth("-1px");
		link_date.setHeight("-1px");
		horizontalLayout_userData.addComponent(link_date);
		
		return horizontalLayout_userData;
	}

}
