/**
 * @Author: Eric H Correia
 *
 * This class creates a container to hold the different 
 * 	types of updaters(Trending tags, Trending cards, Recently Played, Most Popular) on the homepage.
 * 
 */

package com.example.mmowgli_updates;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;

public class HomePageUpdates extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_bottomContainer;
	@AutoGenerated
	private PlayerHistory playerHistory;
	@AutoGenerated
	private PopularTags popularTags;
	@AutoGenerated
	private PopularCards popularCards;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_middleContainer;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Label label_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_topContainer;
	@AutoGenerated
	private RecentlyPlayed recentlyPlayed;
	@AutoGenerated
	private TrendingTags trendingTags;
	@AutoGenerated
	private TrendingCards trendingCards;
	private PopularTags popularTagList;
	private TrendingTags trendingTagList;
	
	private boolean showRootCards = true;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HomePageUpdates() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		//STYLING
		
		//set CSS styling
		trendingCards.setStyleName("updateBorders");
		trendingTags.setStyleName("updateBorders");
		popularCards.setStyleName("updateBorders");
		popularTags.setStyleName("updateBorders");
		label_1.setStyleName("updateBorders");
		label_2.setStyleName("updateBorders");
		
		//horizontal container stylings
		horizontalLayout_topContainer.setStyleName("updaterTopContainer");
		horizontalLayout_middleContainer.setStyleName("updaterMiddleContainer");
		horizontalLayout_bottomContainer.setStyleName("updaterBottomContainer");	
		
		//labels
		label_1.setValue(null);
		label_2.setValue(null);
		label_3.setValue(null);
		
		//add separater icons
		label_1.setIcon(new ThemeResource("images/icons/updates/horizLine.png"));
		label_2.setIcon(new ThemeResource("images/icons/updates/horizLine.png"));
		label_3.setIcon(new ThemeResource("images/icons/updates/horizLine.png"));
		
	}

	public PopularCards getPopularCards() {
		return popularCards;
	}

	public void setPopularCards(PopularCards popularCards) {
		this.popularCards = popularCards;
	}

	public PopularTags getPopularTags() {
		return popularTags;
	}

	public void setPopularTags(PopularTags popularTags) {
		this.popularTags = popularTags;
	}

	public PlayerHistory getPlayerHistory() {
		return playerHistory;
	}

	public void setPlayerHistory(PlayerHistory playerHistory) {
		this.playerHistory = playerHistory;
	}

	public RecentlyPlayed getRecentlyPlayed() {
		return recentlyPlayed;
	}

	public void setRecentlyPlayed(RecentlyPlayed recentlyPlayed) {
		this.recentlyPlayed = recentlyPlayed;
	}

	public TrendingTags getTrendingTags() {
		return trendingTags;
	}

	public void setTrendingTags(TrendingTags trendingTags) {
		this.trendingTags = trendingTags;
	}

	public TrendingCards getTrendingCards() {
		return trendingCards;
	}

	public void setTrendingCards(TrendingCards trendingCards) {
		this.trendingCards = trendingCards;
	}

	public PopularTags getPopularTagList() {
		return popularTagList;
	}

	public void setPopularTagList(PopularTags popularTagList) {
		this.popularTagList = popularTagList;
	}

	public TrendingTags getTrendingTagList() {
		return trendingTagList;
	}

	public void setTrendingTagList(TrendingTags trendingTagList) {
		this.trendingTagList = trendingTagList;
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("800px");
		mainLayout.setMargin(false);
		mainLayout.setRows(3);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("800px");
		
		// horizontalLayout_topContainer
		horizontalLayout_topContainer = buildHorizontalLayout_topContainer();
		mainLayout.addComponent(horizontalLayout_topContainer, 0, 0);
		
		// horizontalLayout_middleContainer
		horizontalLayout_middleContainer = buildHorizontalLayout_middleContainer();
		mainLayout.addComponent(horizontalLayout_middleContainer, 0, 1);
		mainLayout.setComponentAlignment(horizontalLayout_middleContainer,
				new Alignment(48));
		
		// horizontalLayout_bottomContainer
		horizontalLayout_bottomContainer = buildHorizontalLayout_bottomContainer();
		mainLayout.addComponent(horizontalLayout_bottomContainer, 0, 2);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_topContainer() {
		// common part: create layout
		horizontalLayout_topContainer = new HorizontalLayout();
		horizontalLayout_topContainer.setImmediate(false);
		horizontalLayout_topContainer.setWidth("100.0%");
		horizontalLayout_topContainer.setHeight("-1px");
		horizontalLayout_topContainer.setMargin(false);
		
		// trendingCards
		trendingCards = new TrendingCards();
		trendingCards.setImmediate(false);
		trendingCards.setWidth("100.0%");
		trendingCards.setHeight("350px");
		horizontalLayout_topContainer.addComponent(trendingCards);
		horizontalLayout_topContainer.setComponentAlignment(trendingCards,
				new Alignment(48));
		
		// trendingTags
		trendingTags = new TrendingTags();
		trendingTags.setImmediate(false);
		trendingTags.setWidth("100.0%");
		trendingTags.setHeight("350px");
		horizontalLayout_topContainer.addComponent(trendingTags);
		horizontalLayout_topContainer.setComponentAlignment(trendingTags,
				new Alignment(48));
		
		// recentlyPlayed
		recentlyPlayed = new RecentlyPlayed();
		recentlyPlayed.setImmediate(false);
		recentlyPlayed.setWidth("100.0%");
		recentlyPlayed.setHeight("350px");
		horizontalLayout_topContainer.addComponent(recentlyPlayed);
		horizontalLayout_topContainer.setComponentAlignment(recentlyPlayed,
				new Alignment(48));
		
		return horizontalLayout_topContainer;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_middleContainer() {
		// common part: create layout
		horizontalLayout_middleContainer = new HorizontalLayout();
		horizontalLayout_middleContainer.setImmediate(false);
		horizontalLayout_middleContainer.setWidth("100.0%");
		horizontalLayout_middleContainer.setHeight("-1px");
		horizontalLayout_middleContainer.setMargin(false);
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("2px");
		label_1.setValue("Label");
		horizontalLayout_middleContainer.addComponent(label_1);
		horizontalLayout_middleContainer.setComponentAlignment(label_1,
				new Alignment(24));
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Label");
		horizontalLayout_middleContainer.addComponent(label_2);
		horizontalLayout_middleContainer.setComponentAlignment(label_2,
				new Alignment(24));
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Label");
		horizontalLayout_middleContainer.addComponent(label_3);
		horizontalLayout_middleContainer.setComponentAlignment(label_3,
				new Alignment(24));
		
		return horizontalLayout_middleContainer;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_bottomContainer() {
		// common part: create layout
		horizontalLayout_bottomContainer = new HorizontalLayout();
		horizontalLayout_bottomContainer.setImmediate(false);
		horizontalLayout_bottomContainer.setWidth("100.0%");
		horizontalLayout_bottomContainer.setHeight("-1px");
		horizontalLayout_bottomContainer.setMargin(false);
		
		// popularCards
		popularCards = new PopularCards();
		popularCards.setImmediate(false);
		popularCards.setWidth("100.0%");
		popularCards.setHeight("350px");
		horizontalLayout_bottomContainer.addComponent(popularCards);
		horizontalLayout_bottomContainer.setComponentAlignment(popularCards,
				new Alignment(48));
		
		// popularTags
		popularTags = new PopularTags();
		popularTags.setImmediate(false);
		popularTags.setWidth("100.0%");
		popularTags.setHeight("350px");
		horizontalLayout_bottomContainer.addComponent(popularTags);
		horizontalLayout_bottomContainer.setComponentAlignment(popularTags,
				new Alignment(48));
		
		// playerHistory
		playerHistory = new PlayerHistory();
		playerHistory.setImmediate(false);
		playerHistory.setWidth("100.0%");
		playerHistory.setHeight("350px");
		horizontalLayout_bottomContainer.addComponent(playerHistory);
		horizontalLayout_bottomContainer.setComponentAlignment(playerHistory,
				new Alignment(48));
		
		return horizontalLayout_bottomContainer;
	}

}
