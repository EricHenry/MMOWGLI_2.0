/**
 * @Author: Eric H Correia
 *
 * This class creates 
 * 
 */

package com.example.mmowgli_updates;

import java.sql.SQLException;

import com.example.mmowgli_backend.MmowgliDB;
import com.example.mmowgli_backend.TagList;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.VerticalLayout;

public class PopularTags extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private GridLayout link_container;
	@AutoGenerated
	private Label label_title;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PopularTags() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		//gridLayout_2.setRowExpandRatio(rowIndex, ratio);
		initPopularTags();
	}
	
	/**
	 * This method gets the top 15 most popular tags 
	 * from the database and displays them on the screen. 
	 */
	private void initPopularTags(){
		
		try {
			
			int index = 1;
			int row = 0;			//the current row of the gridlayout to store a link
			int column = 0;			//the current column of the gridlayout to store a link
			
			//get the list from the database
			TagList topTags = MmowgliDB.topTagsQuery();
			
			//cycle through the list and add display it
			while(topTags.size() > 0){
				
				//get the first tag in the in the list
				String currentTag = topTags.getTag();
				
				//create a tag
				Link tag = new Link();
				tag.setCaption(index + ".) " + currentTag);
				
				//insert the tag into the display
				link_container.addComponent(tag, column, row);
				
				//update the row and column info
				column = index % 3;
				if(index % 3 == 0){
					row = row + 1;
				}
				index++;
				
				//Style the link
				link_container.setComponentAlignment(tag, Alignment.MIDDLE_CENTER);
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// label_title
		label_title = new Label();
		label_title.setImmediate(false);
		label_title.setWidth("-1px");
		label_title.setHeight("-1px");
		label_title.setValue("All Time Most popular Tags");
		mainLayout.addComponent(label_title);
		mainLayout.setExpandRatio(label_title, 0.2f);
		mainLayout.setComponentAlignment(label_title, new Alignment(48));
		
		// link_container
		link_container = new GridLayout();
		link_container.setImmediate(false);
		link_container.setWidth("85.0%");
		link_container.setHeight("100.0%");
		link_container.setMargin(false);
		link_container.setSpacing(true);
		link_container.setColumns(3);
		link_container.setRows(5);
		mainLayout.addComponent(link_container);
		mainLayout.setExpandRatio(link_container, 1.0f);
		mainLayout.setComponentAlignment(link_container, new Alignment(20));
		
		return mainLayout;
	}

}
