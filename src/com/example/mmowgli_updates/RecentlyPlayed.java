/**
 * @Author: Eric H Correia
 *
 * This class creates 
 * 
 */

package com.example.mmowgli_updates;

import java.sql.SQLException;
import java.text.SimpleDateFormat;

import com.example.mmowgli_backend.Card;
import com.example.mmowgli_backend.CardList;
import com.example.mmowgli_backend.MmowgliDB;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;

public class RecentlyPlayed extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private Label label_played;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public RecentlyPlayed() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		
		initRecentCardsList();
		
	}
	
	/**
	 * This method gets the top 5 most recently played cards 
	 * from the database and displays them on the screen. 
	 */
	private void initRecentCardsList(){
		
		try {
			//get the list from the database
			CardList topcards = MmowgliDB.recentCardsQuery();
			
			//cycle through the list and add display it
			while(topcards.size() > 0){
				
				//get the first card in the in the list
				Card currentCardData = topcards.getCard();
				
				//get the current card data
				String id = Integer.toString(currentCardData.cardId);
				String pId = Integer.toString(currentCardData.playerId);
				String cardText = currentCardData.textUser;
				String cardType = currentCardData.cardType;
				String date = new SimpleDateFormat("MM/dd/yyyy").format(currentCardData.time.getDate());
				
				//create a new card view using the card data.
				BaseCardView newCard = new BaseCardView(id, pId, cardText, cardType, date);
				
				//add card to the view
				mainLayout.addComponent(newCard);
				mainLayout.setComponentAlignment(newCard, Alignment.MIDDLE_CENTER);
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setRows(6);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// label_played
		label_played = new Label();
		label_played.setImmediate(false);
		label_played.setWidth("-1px");
		label_played.setHeight("-1px");
		label_played.setValue("Most Recently Played");
		mainLayout.addComponent(label_played, 0, 0);
		mainLayout.setComponentAlignment(label_played, new Alignment(48));
		
		return mainLayout;
	}

}
